<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Countdown Timer with Weather Forecast</title>
    <style>
        body {
            margin: 0;
            padding: 0;
            height: 100vh;
            background-image: url('https://img.goodfon.com/original/1920x1200/b/38/gornye-lyzhi-lyzhnik-sneg-gory.jpg');
            background-size: cover;
            background-position: center;
            display: flex;
            justify-content: center;
            align-items: center;
            color: white;
        }
        .countdown-box {
            background: rgba(0, 0, 0, 0.5);
            padding: 20px 40px;
            border-radius: 10px;
            font-family: Arial, sans-serif;
            text-align: center;
            width: 80%;
            max-width: 600px;
        }
        .title {
            font-size: 1.5em;
            margin-bottom: 10px;
        }
        .countdown-text {
            font-size: 2em;
            margin-bottom: 20px;
        }
        .compact-info {
            font-size: 1em;
            margin-top: 10px;
        }
        .compact-info p {
            margin: 3px 0;
        }
        .emoji {
            font-size: 1.5em;
        }
        .weather-item {
            font-size: 1.1em;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>

    <div class="countdown-box">
        <div class="title">Vinnufer√∞ hefst eftir:</div>
        <div class="countdown-text" id="countdown"></div>

        <!-- Compact Flight Info -->
        <div class="compact-info">
            <p><span class="emoji">‚úàÔ∏è</span> OG764: KEF ‚Üí GVA</p>
            <p><span class="emoji">‚è±Ô∏è</span> Flugt√≠mi: 3 klst 55 m√≠n</p>
        </div>

        <!-- Compact Accommodation Info -->
        <div class="compact-info">
            <p><span class="emoji">üè†</span> Gist hj√° fj√∂lskyldunni √≠ Les Houches</p>
            <p><span class="emoji">üõèÔ∏è</span> Deluxe herbergi</p>
            <p><span class="emoji">üöê</span> Free airport shuttle</p>
        </div>

        <!-- Weather Forecast -->
        <div id="forecast-list" class="weather-forecast"></div>
    </div>

    <script>
        // Countdown Timer
        function updateCountdown() {
            const targetDate = new Date('2025-02-08T00:00:00'); // Date for the countdown
            const now = new Date();
            const timeDiff = targetDate - now;

            if (timeDiff <= 0) {
                document.getElementById("countdown").innerHTML = "Expired";
            } else {
                const days = Math.floor(timeDiff / (1000 * 60 * 60 * 24));
                const hours = Math.floor((timeDiff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                const minutes = Math.floor((timeDiff % (1000 * 60 * 60)) / (1000 * 60));
                document.getElementById("countdown").innerHTML = `${days}d ${hours}h ${minutes}m`;
            }
        }
        setInterval(updateCountdown, 60000); // Update every minute
        updateCountdown(); // Initial update

        // Fetch Weather Data
        async function getWeather() {
            const url = 'https://api.met.no/weatherapi/locationforecast/2.0/classic?lat=45.9237&lon=6.8694'; // Correct coordinates for Chamonix
            const headers = {
                'User-Agent': 'WeatherForecastApp/1.0 (julie.ipsen924@goldfishgateway.com)', // Your email and app name
                'Accept': 'application/json'
            };

            try {
                const response = await fetch(url, { headers });
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }

                const data = await response.json();
                displayWeather(data);
            } catch (error) {
                console.error("Error fetching weather data:", error);
                document.getElementById("forecast-list").innerHTML = "Unable to retrieve weather data.";
            }
        }

        function displayWeather(data) {
            const forecastList = document.getElementById("forecast-list");
            forecastList.innerHTML = ""; // Clear previous content

            const weatherData = data.properties.timeseries.slice(0, 7); // Display 7 days of forecast
            weatherData.forEach(item => {
                const time = new Date(item.time);
                const day = time.toLocaleDateString('is-IS', { weekday: 'short', day: 'numeric', month: 'short' });
                const temp = item.data.instant.details.air_temperature;
                const symbol = item.data.next_12_hours.summary.symbol_code;

                let weatherEmoji = "üå§Ô∏è"; // Default sunny weather
                if (symbol.includes("cloud")) weatherEmoji = "‚òÅÔ∏è";
                if (symbol.includes("rain")) weatherEmoji = "üåßÔ∏è";
                if (symbol.includes("snow")) weatherEmoji = "‚ùÑÔ∏è";

                forecastList.innerHTML += `
                    <div class="weather-item">
                        <strong>${day}</strong> - ${temp}¬∞C ${weatherEmoji}
                    </div>
                `;
            });
        }

        getWeather(); // Call the function to fetch the weather data
    </script>
</body>
</html>
